{"de.upb.gpa.Checkstyle.119":{"startLine":"656","shortMessage":"Parameter user should be final.","longMessage":"Parameter user should be final."},"de.upb.gpa.Checkstyle.614":{"startLine":"704","shortMessage":"Parameter tan should be final.","longMessage":"Parameter tan should be final."},"de.upb.gpa.Checkstyle.537":{"startLine":"719","shortMessage":"Parameter userName should be final.","longMessage":"Parameter userName should be final."},"de.upb.gpa.Checkstyle.615":{"startLine":"704","shortMessage":"Expected @param tag for 'tan'.","longMessage":"Expected @param tag for 'tan'."},"de.upb.gpa.Checkstyle.538":{"startLine":"719","shortMessage":"Expected @param tag for 'userName'.","longMessage":"Expected @param tag for 'userName'."},"de.upb.gpa.Checkstyle.612":{"startLine":"354","shortMessage":"Parameter tanNr should be final.","longMessage":"Parameter tanNr should be final."},"de.upb.gpa.Checkstyle.613":{"startLine":"354","shortMessage":"Expected @param tag for 'tanNr'.","longMessage":"Expected @param tag for 'tanNr'."},"de.upb.gpa.Checkstyle.610":{"startLine":"303","shortMessage":"Parameter errorMessage should be final.","longMessage":"Parameter errorMessage should be final."},"de.upb.gpa.Checkstyle.116":{"startLine":"623","shortMessage":"'5' is a magic number.","longMessage":"'5' is a magic number."},"de.upb.gpa.Checkstyle.611":{"startLine":"303","shortMessage":"Expected @param tag for 'errorMessage'.","longMessage":"Expected @param tag for 'errorMessage'."},"de.upb.gpa.Checkstyle.377":{"startLine":"719","shortMessage":"Parameter password should be final.","longMessage":"Parameter password should be final."},"de.upb.gpa.findbugs.OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE":{"startLine":"530","shortMessage":"Experimental - Method may fail to clean up stream or resource on checked exception","longMessage":"This method may fail to clean up (close, dispose of) a stream, database object, or other resource requiring an explicit cleanup operation. In general, if a method opens a stream or other resource, the method should use a try\/finally block to ensure that the stream or resource is cleaned up before the method returns. This bug pattern is essentially the same as the OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE bug patterns, but is based on a different (and hopefully better) static analysis technique. We are interested is getting feedback about the usefulness of this bug pattern. For sending feedback, check: contributing guideline malinglist In particular, the false-positive suppression heuristics for this bug pattern have not been extensively tuned, so reports about false positives are helpful to us. See Weimer and Necula, Finding and Preventing Run-Time Error Handling Mistakes, for a description of the analysis technique."},"de.upb.gpa.Checkstyle.134":{"startLine":"413","shortMessage":"'10' is a magic number.","longMessage":"'10' is a magic number."},"de.upb.gpa.Checkstyle.29":{"startLine":"446","shortMessage":"'}' at column 3 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if\/else-if\/else, do\/while or try\/catch\/finally).","longMessage":"'}' at column 3 should be on the same line as the next part of a multi-block statement ."},"de.upb.gpa.Checkstyle.76":{"startLine":"168","shortMessage":"Expected @return tag.","longMessage":"Expected @return tag."},"de.upb.gpa.findbugs.DM_NUMBER_CTOR":{"startLine":"798","shortMessage":"Performance - Method invokes inefficient Number constructor; use static valueOf instead","longMessage":"Using new Integer(int) is guaranteed to always result in a new object whereas Integer.valueOf(int) allows caching of values to be done by the compiler, class library, or JVM. Using of cached values avoids object allocation and the code will be faster. Values between -128 and 127 are guaranteed to have corresponding cached instances and using valueOf is approximately 3.5 times faster than using constructor. For values outside the constant range the performance of both styles is the same. Unless the class must be compatible with JVMs predating Java 1.5, use either autoboxing or the valueOf() method when creating instances of Long, Integer, Short, Character, and Byte."},"de.upb.gpa.Checkstyle.12":{"startLine":"811","shortMessage":"'{' at column 2 should be on the previous line.","longMessage":"'{' at column 2 should be on the previous line."},"de.upb.gpa.Checkstyle.35":{"startLine":"783","shortMessage":"Parameter s should be final.","longMessage":"Parameter s should be final."},"de.upb.gpa.Checkstyle.13":{"startLine":"743","shortMessage":"'{' at column 3 should be on the previous line.","longMessage":"'{' at column 3 should be on the previous line."},"de.upb.gpa.Checkstyle.14":{"startLine":"751","shortMessage":"'{' at column 4 should be on the previous line.","longMessage":"'{' at column 4 should be on the previous line."},"de.upb.gpa.Checkstyle.36":{"startLine":"286","shortMessage":"'}' at column 4 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if\/else-if\/else, do\/while or try\/catch\/finally).","longMessage":"'}' at column 4 should be on the same line as the next part of a multi-block statement ."},"de.upb.gpa.Checkstyle.15":{"startLine":"747","shortMessage":"'{' at column 5 should be on the previous line.","longMessage":"'{' at column 5 should be on the previous line."},"de.upb.gpa.Checkstyle.609":{"startLine":"393","shortMessage":"Expected @param tag for 'ec'.","longMessage":"Expected @param tag for 'ec'."},"de.upb.gpa.Checkstyle.625":{"startLine":"810","shortMessage":"Class 'MultiLevelLogin2' looks like designed for extension (can be subclassed), but the method 'getCredits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getCredits' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'MultiLevelLogin2' looks like designed for extension , but the method 'getCredits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getCredits' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.findbugs.HE_INHERITS_EQUALS_USE_HASHCODE":{"startLine":"58","shortMessage":"Bad practice - Class inherits equals() and uses Object.hashCode()","longMessage":"This class inherits equals(Object) from an abstract superclass, and hashCode() fromjava.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).&nbsp; Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. If you don't want to define a hashCode method, and\/or don't believe the object will ever be put into a HashMap\/Hashtable, define the hashCode() method to throw UnsupportedOperationException."},"de.upb.gpa.Checkstyle.623":{"startLine":"800","shortMessage":"Class 'MultiLevelLogin2' looks like designed for extension (can be subclassed), but the method 'getDefaultRanking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getDefaultRanking' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'MultiLevelLogin2' looks like designed for extension , but the method 'getDefaultRanking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getDefaultRanking' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.624":{"startLine":"805","shortMessage":"Class 'MultiLevelLogin2' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getTitle' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'MultiLevelLogin2' looks like designed for extension , but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getTitle' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.621":{"startLine":"760","shortMessage":"Class 'MultiLevelLogin2' looks like designed for extension (can be subclassed), but the method 'getDefaultCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getDefaultCategory' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'MultiLevelLogin2' looks like designed for extension , but the method 'getDefaultCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getDefaultCategory' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.622":{"startLine":"783","shortMessage":"Class 'MultiLevelLogin2' looks like designed for extension (can be subclassed), but the method 'getInstructions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getInstructions' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'MultiLevelLogin2' looks like designed for extension , but the method 'getInstructions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MultiLevelLogin2' final or making the method 'getInstructions' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.2":{"startLine":"812","shortMessage":"Line is longer than 80 characters (found 112).","longMessage":"Line is longer than 80 characters ."},"de.upb.gpa.Checkstyle.146":{"startLine":"404","shortMessage":"Parameter ec should be final.","longMessage":"Parameter ec should be final."},"de.upb.gpa.findbugs.OBL_UNSATISFIED_OBLIGATION":{"startLine":"490","shortMessage":"Experimental - Method may fail to clean up stream or resource","longMessage":"This method may fail to clean up (close, dispose of) a stream, database object, or other resource requiring an explicit cleanup operation. In general, if a method opens a stream or other resource, the method should use a try\/finally block to ensure that the stream or resource is cleaned up before the method returns. This bug pattern is essentially the same as the OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE bug patterns, but is based on a different (and hopefully better) static analysis technique. We are interested is getting feedback about the usefulness of this bug pattern. For sending feedback, check: contributing guideline malinglist In particular, the false-positive suppression heuristics for this bug pattern have not been extensively tuned, so reports about false positives are helpful to us. See Weimer and Necula, Finding and Preventing Run-Time Error Handling Mistakes, for a description of the analysis technique."},"de.upb.gpa.Checkstyle.620":{"startLine":"707","shortMessage":"'{' at column 37 should have line break after.","longMessage":"'{' at column 37 should have line break after."},"de.upb.gpa.Checkstyle.4":{"startLine":"55","shortMessage":"Unknown tag 'created'.","longMessage":"Unknown tag 'created'."},"de.upb.gpa.Checkstyle.540":{"startLine":"656","shortMessage":"Expected @param tag for 'user'.","longMessage":"Expected @param tag for 'user'."},"de.upb.gpa.Checkstyle.3":{"startLine":"767","shortMessage":"Line has trailing spaces.","longMessage":"Line has trailing spaces."},"de.upb.gpa.Checkstyle.6":{"startLine":"60","shortMessage":"File contains tab characters (this is the first instance).","longMessage":"File contains tab characters ."},"de.upb.gpa.Checkstyle.5":{"startLine":"59","shortMessage":"'{' at column 1 should be on the previous line.","longMessage":"'{' at column 1 should be on the previous line."},"de.upb.gpa.Checkstyle.8":{"startLine":"798","shortMessage":"'static' modifier out of order with the JLS suggestions.","longMessage":"'static' modifier out of order with the JLS suggestions."},"de.upb.gpa.Checkstyle.7":{"startLine":"765","shortMessage":"First sentence should end with a period.","longMessage":"First sentence should end with a period."},"de.upb.gpa.Checkstyle.141":{"startLine":"733","shortMessage":"Expression can be simplified.","longMessage":"Expression can be simplified."},"de.upb.gpa.Checkstyle.9":{"startLine":"810","shortMessage":"Missing a Javadoc comment.","longMessage":"Missing a Javadoc comment."},"de.upb.gpa.Checkstyle.65":{"startLine":"770","shortMessage":"Expected @param tag for 's'.","longMessage":"Expected @param tag for 's'."},"de.upb.gpa.findbugs.ODR_OPEN_DATABASE_RESOURCE":{"startLine":"490","shortMessage":"Bad practice - Method may fail to close database resource","longMessage":"The method creates a database resource (such as a database connectionor row set), does not assign it to anyfields, pass it to other methods, or return it, and does not appear to closethe object on all paths out of the method.&nbsp; Failure toclose database resources on all paths out of a method mayresult in poor performance, and could cause the application tohave problems communicating with the database."},"de.upb.gpa.Checkstyle.616":{"startLine":"656","shortMessage":"Parameter tanPosition should be final.","longMessage":"Parameter tanPosition should be final."},"de.upb.gpa.Checkstyle.539":{"startLine":"719","shortMessage":"Expected @param tag for 'password'.","longMessage":"Expected @param tag for 'password'."},"de.upb.gpa.Checkstyle.617":{"startLine":"656","shortMessage":"Expected @param tag for 'tanPosition'.","longMessage":"Expected @param tag for 'tanPosition'."}}