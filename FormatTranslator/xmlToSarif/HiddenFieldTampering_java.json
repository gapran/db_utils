{"de.upb.gpa.Checkstyle.199":{"startLine":"138","shortMessage":"'6' is a magic number.","longMessage":"'6' is a magic number."},"de.upb.gpa.Checkstyle.29":{"startLine":"165","shortMessage":"'}' at column 3 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if\/else-if\/else, do\/while or try\/catch\/finally).","longMessage":"'}' at column 3 should be on the same line as the next part of a multi-block statement ."},"de.upb.gpa.Checkstyle.494":{"startLine":"227","shortMessage":"Class 'HiddenFieldTampering' looks like designed for extension (can be subclassed), but the method 'getCredits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HiddenFieldTampering' final or making the method 'getCredits' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'HiddenFieldTampering' looks like designed for extension , but the method 'getCredits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HiddenFieldTampering' final or making the method 'getCredits' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.492":{"startLine":"76","shortMessage":"Variable 'script' must be private and have accessor methods.","longMessage":"Variable 'script' must be private and have accessor methods."},"de.upb.gpa.Checkstyle.493":{"startLine":"212","shortMessage":"Class 'HiddenFieldTampering' looks like designed for extension (can be subclassed), but the method 'getDefaultRanking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HiddenFieldTampering' final or making the method 'getDefaultRanking' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'HiddenFieldTampering' looks like designed for extension , but the method 'getDefaultRanking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HiddenFieldTampering' final or making the method 'getDefaultRanking' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.490":{"startLine":"74","shortMessage":"Variable 'pattern1' must be private and have accessor methods.","longMessage":"Variable 'pattern1' must be private and have accessor methods."},"de.upb.gpa.Checkstyle.491":{"startLine":"75","shortMessage":"Variable 'lineSep' must be private and have accessor methods.","longMessage":"Variable 'lineSep' must be private and have accessor methods."},"de.upb.gpa.findbugs.DM_NUMBER_CTOR":{"startLine":"61","shortMessage":"Performance - Method invokes inefficient Number constructor; use static valueOf instead","longMessage":"Using new Integer(int) is guaranteed to always result in a new object whereas Integer.valueOf(int) allows caching of values to be done by the compiler, class library, or JVM. Using of cached values avoids object allocation and the code will be faster. Values between -128 and 127 are guaranteed to have corresponding cached instances and using valueOf is approximately 3.5 times faster than using constructor. For values outside the constant range the performance of both styles is the same. Unless the class must be compatible with JVMs predating Java 1.5, use either autoboxing or the valueOf() method when creating instances of Long, Integer, Short, Character, and Byte."},"de.upb.gpa.Checkstyle.12":{"startLine":"228","shortMessage":"'{' at column 2 should be on the previous line.","longMessage":"'{' at column 2 should be on the previous line."},"de.upb.gpa.Checkstyle.35":{"startLine":"197","shortMessage":"Parameter s should be final.","longMessage":"Parameter s should be final."},"de.upb.gpa.Checkstyle.13":{"startLine":"167","shortMessage":"'{' at column 3 should be on the previous line.","longMessage":"'{' at column 3 should be on the previous line."},"de.upb.gpa.findbugs.URF_UNREAD_FIELD":{"startLine":"74","shortMessage":"Performance - Unread field","longMessage":"This field is never read.&nbsp; Consider removing it from the class."},"de.upb.gpa.Checkstyle.14":{"startLine":"169","shortMessage":"'{' at column 4 should be on the previous line.","longMessage":"'{' at column 4 should be on the previous line."},"de.upb.gpa.Checkstyle.70":{"startLine":"203","shortMessage":"'+' is not preceded with whitespace.","longMessage":"'+' is not preceded with whitespace."},"de.upb.gpa.findbugs.HE_INHERITS_EQUALS_USE_HASHCODE":{"startLine":"61","shortMessage":"Bad practice - Class inherits equals() and uses Object.hashCode()","longMessage":"This class inherits equals(Object) from an abstract superclass, and hashCode() fromjava.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).&nbsp; Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. If you don't want to define a hashCode method, and\/or don't believe the object will ever be put into a HashMap\/Hashtable, define the hashCode() method to throw UnsupportedOperationException."},"de.upb.gpa.Checkstyle.489":{"startLine":"72","shortMessage":"Variable 'regex' must be private and have accessor methods.","longMessage":"Variable 'regex' must be private and have accessor methods."},"de.upb.gpa.Checkstyle.2":{"startLine":"203","shortMessage":"Line is longer than 80 characters (found 148).","longMessage":"Line is longer than 80 characters ."},"de.upb.gpa.Checkstyle.4":{"startLine":"57","shortMessage":"Unknown tag 'created'.","longMessage":"Unknown tag 'created'."},"de.upb.gpa.Checkstyle.3":{"startLine":"219","shortMessage":"Line has trailing spaces.","longMessage":"Line has trailing spaces."},"de.upb.gpa.Checkstyle.17":{"startLine":"203","shortMessage":"')' is preceded with whitespace.","longMessage":"')' is preceded with whitespace."},"de.upb.gpa.Checkstyle.6":{"startLine":"61","shortMessage":"File contains tab characters (this is the first instance).","longMessage":"File contains tab characters ."},"de.upb.gpa.Checkstyle.5":{"startLine":"60","shortMessage":"'{' at column 1 should be on the previous line.","longMessage":"'{' at column 1 should be on the previous line."},"de.upb.gpa.Checkstyle.8":{"startLine":"210","shortMessage":"'static' modifier out of order with the JLS suggestions.","longMessage":"'static' modifier out of order with the JLS suggestions."},"de.upb.gpa.Checkstyle.7":{"startLine":"217","shortMessage":"First sentence should end with a period.","longMessage":"First sentence should end with a period."},"de.upb.gpa.Checkstyle.9":{"startLine":"227","shortMessage":"Missing a Javadoc comment.","longMessage":"Missing a Javadoc comment."},"de.upb.gpa.Checkstyle.65":{"startLine":"197","shortMessage":"Expected @param tag for 's'.","longMessage":"Expected @param tag for 's'."},"de.upb.gpa.Checkstyle.69":{"startLine":"203","shortMessage":"'+' is not followed by whitespace.","longMessage":"'+' is not followed by whitespace."}}