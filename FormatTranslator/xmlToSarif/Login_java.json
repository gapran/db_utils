{"de.upb.gpa.Checkstyle.736":{"startLine":"153","shortMessage":"Class 'Login' looks like designed for extension (can be subclassed), but the method 'login_BACKUP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'login_BACKUP' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'Login' looks like designed for extension , but the method 'login_BACKUP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'login_BACKUP' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.117":{"startLine":"160","shortMessage":"'3' is a magic number.","longMessage":"'3' is a magic number."},"de.upb.gpa.Checkstyle.377":{"startLine":"153","shortMessage":"Parameter password should be final.","longMessage":"Parameter password should be final."},"de.upb.gpa.Checkstyle.378":{"startLine":"189","shortMessage":"Class 'Login' looks like designed for extension (can be subclassed), but the method 'getAllEmployees' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'getAllEmployees' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'Login' looks like designed for extension , but the method 'getAllEmployees' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'getAllEmployees' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.findbugs.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE":{"startLine":"156","shortMessage":"Security - Nonconstant string passed to execute or addBatch method on an SQL statement","longMessage":"The method invokes the execute or addBatch method on an SQL statement with a String that seemsto be dynamically generated. Consider usinga prepared statement instead. It is more efficient and less vulnerable toSQL injection attacks."},"de.upb.gpa.Checkstyle.375":{"startLine":"113","shortMessage":"Class 'Login' looks like designed for extension (can be subclassed), but the method 'requiresAuthentication' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'requiresAuthentication' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'Login' looks like designed for extension , but the method 'requiresAuthentication' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'requiresAuthentication' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.27":{"startLine":"146","shortMessage":"'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if\/else-if\/else, do\/while or try\/catch\/finally).","longMessage":"'}' at column 5 should be on the same line as the next part of a multi-block statement ."},"de.upb.gpa.Checkstyle.376":{"startLine":"118","shortMessage":"Class 'Login' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'login' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'Login' looks like designed for extension , but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'login' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.373":{"startLine":"58","shortMessage":"Class 'Login' looks like designed for extension (can be subclassed), but the method 'handleRequest' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'handleRequest' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'Login' looks like designed for extension , but the method 'handleRequest' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'handleRequest' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.374":{"startLine":"103","shortMessage":"Class 'Login' looks like designed for extension (can be subclassed), but the method 'getNextPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'getNextPage' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'Login' looks like designed for extension , but the method 'getNextPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'getNextPage' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.297":{"startLine":"153","shortMessage":"Parameter userId should be final.","longMessage":"Parameter userId should be final."},"de.upb.gpa.Checkstyle.292":{"startLine":"52","shortMessage":"Parameter lessonName should be final.","longMessage":"Parameter lessonName should be final."},"de.upb.gpa.Checkstyle.293":{"startLine":"52","shortMessage":"Parameter actionName should be final.","longMessage":"Parameter actionName should be final."},"de.upb.gpa.Checkstyle.30":{"startLine":"93","shortMessage":"'else' construct must use '{}'s.","longMessage":"'else' construct must use '{}'s."},"de.upb.gpa.Checkstyle.291":{"startLine":"52","shortMessage":"Parameter lesson should be final.","longMessage":"Parameter lesson should be final."},"de.upb.gpa.Checkstyle.76":{"startLine":"99","shortMessage":"Expected @return tag.","longMessage":"Expected @return tag."},"de.upb.gpa.Checkstyle.12":{"startLine":"231","shortMessage":"'{' at column 2 should be on the previous line.","longMessage":"'{' at column 2 should be on the previous line."},"de.upb.gpa.Checkstyle.35":{"startLine":"230","shortMessage":"Parameter s should be final.","longMessage":"Parameter s should be final."},"de.upb.gpa.Checkstyle.13":{"startLine":"254","shortMessage":"'{' at column 3 should be on the previous line.","longMessage":"'{' at column 3 should be on the previous line."},"de.upb.gpa.Checkstyle.14":{"startLine":"245","shortMessage":"'{' at column 4 should be on the previous line.","longMessage":"'{' at column 4 should be on the previous line."},"de.upb.gpa.Checkstyle.36":{"startLine":"243","shortMessage":"'}' at column 4 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if\/else-if\/else, do\/while or try\/catch\/finally).","longMessage":"'}' at column 4 should be on the same line as the next part of a multi-block statement ."},"de.upb.gpa.Checkstyle.15":{"startLine":"249","shortMessage":"'{' at column 5 should be on the previous line.","longMessage":"'{' at column 5 should be on the previous line."},"de.upb.gpa.Checkstyle.302":{"startLine":"52","shortMessage":"'chainedAction' hides a field.","longMessage":"'chainedAction' hides a field."},"de.upb.gpa.Checkstyle.2":{"startLine":"250","shortMessage":"Line is longer than 80 characters (found 81).","longMessage":"Line is longer than 80 characters ."},"de.upb.gpa.findbugs.OBL_UNSATISFIED_OBLIGATION":{"startLine":"156","shortMessage":"Experimental - Method may fail to clean up stream or resource","longMessage":"This method may fail to clean up (close, dispose of) a stream, database object, or other resource requiring an explicit cleanup operation. In general, if a method opens a stream or other resource, the method should use a try\/finally block to ensure that the stream or resource is cleaned up before the method returns. This bug pattern is essentially the same as the OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE bug patterns, but is based on a different (and hopefully better) static analysis technique. We are interested is getting feedback about the usefulness of this bug pattern. For sending feedback, check: contributing guideline malinglist In particular, the false-positive suppression heuristics for this bug pattern have not been extensively tuned, so reports about false positives are helpful to us. See Weimer and Necula, Finding and Preventing Run-Time Error Handling Mistakes, for a description of the analysis technique."},"de.upb.gpa.Checkstyle.301":{"startLine":"52","shortMessage":"Parameter chainedAction should be final.","longMessage":"Parameter chainedAction should be final."},"de.upb.gpa.Checkstyle.3":{"startLine":"44","shortMessage":"Line has trailing spaces.","longMessage":"Line has trailing spaces."},"de.upb.gpa.Checkstyle.6":{"startLine":"50","shortMessage":"File contains tab characters (this is the first instance).","longMessage":"File contains tab characters ."},"de.upb.gpa.Checkstyle.5":{"startLine":"48","shortMessage":"'{' at column 1 should be on the previous line.","longMessage":"'{' at column 1 should be on the previous line."},"de.upb.gpa.Checkstyle.162":{"startLine":"166","shortMessage":"'{' at column 7 should be on the previous line.","longMessage":"'{' at column 7 should be on the previous line."},"de.upb.gpa.Checkstyle.9":{"startLine":"230","shortMessage":"Missing a Javadoc comment.","longMessage":"Missing a Javadoc comment."},"de.upb.gpa.Checkstyle.65":{"startLine":"99","shortMessage":"Expected @param tag for 's'.","longMessage":"Expected @param tag for 's'."},"de.upb.gpa.findbugs.REC_CATCH_EXCEPTION":{"startLine":"120","shortMessage":"Style - Exception is caught when Exception is not thrown","longMessage":"This method uses a try-catch block that catches Exception objects, but Exception is not thrown within the try block, and RuntimeException is not explicitly caught. It is a common bug pattern to say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well, masking potential bugs. A better approach is to either explicitly catch the specific exceptions that are thrown, or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:try { ...} catch (RuntimeException e) { throw e;} catch (Exception e) { ... deal with all non-runtime exceptions ...}"},"de.upb.gpa.Checkstyle.26":{"startLine":"107","shortMessage":"'if' construct must use '{}'s.","longMessage":"'if' construct must use '{}'s."},"de.upb.gpa.findbugs.ODR_OPEN_DATABASE_RESOURCE":{"startLine":"156","shortMessage":"Bad practice - Method may fail to close database resource","longMessage":"The method creates a database resource (such as a database connectionor row set), does not assign it to anyfields, pass it to other methods, or return it, and does not appear to closethe object on all paths out of the method.&nbsp; Failure toclose database resources on all paths out of a method mayresult in poor performance, and could cause the application tohave problems communicating with the database."},"de.upb.gpa.Checkstyle.83":{"startLine":"203","shortMessage":"Name 'answer_statement' must match pattern '^[a-z][a-zA-Z0-9]*$'.","longMessage":"Name 'answer_statement' must match pattern '^[a-z][a-zA-Z0-9]*$'."},"de.upb.gpa.Checkstyle.737":{"startLine":"153","shortMessage":"Name 'login_BACKUP' must match pattern '^[a-z][a-zA-Z0-9]*$'.","longMessage":"Name 'login_BACKUP' must match pattern '^[a-z][a-zA-Z0-9]*$'."},"de.upb.gpa.Checkstyle.62":{"startLine":"151","shortMessage":"'{' at column 6 should be on the previous line.","longMessage":"'{' at column 6 should be on the previous line."},"de.upb.gpa.Checkstyle.84":{"startLine":"205","shortMessage":"Name 'answer_results' must match pattern '^[a-z][a-zA-Z0-9]*$'.","longMessage":"Name 'answer_results' must match pattern '^[a-z][a-zA-Z0-9]*$'."}}