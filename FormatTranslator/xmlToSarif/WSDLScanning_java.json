{"de.upb.gpa.Checkstyle.111":{"startLine":"154","shortMessage":"'{' is followed by whitespace.","longMessage":"'{' is followed by whitespace."},"de.upb.gpa.findbugs.DM_NUMBER_CTOR":{"startLine":"171","shortMessage":"Performance - Method invokes inefficient Number constructor; use static valueOf instead","longMessage":"Using new Integer(int) is guaranteed to always result in a new object whereas Integer.valueOf(int) allows caching of values to be done by the compiler, class library, or JVM. Using of cached values avoids object allocation and the code will be faster. Values between -128 and 127 are guaranteed to have corresponding cached instances and using valueOf is approximately 3.5 times faster than using constructor. For values outside the constant range the performance of both styles is the same. Unless the class must be compatible with JVMs predating Java 1.5, use either autoboxing or the valueOf() method when creating instances of Long, Integer, Short, Character, and Byte."},"de.upb.gpa.Checkstyle.12":{"startLine":"313","shortMessage":"'{' at column 2 should be on the previous line.","longMessage":"'{' at column 2 should be on the previous line."},"de.upb.gpa.Checkstyle.13":{"startLine":"284","shortMessage":"'{' at column 3 should be on the previous line.","longMessage":"'{' at column 3 should be on the previous line."},"de.upb.gpa.Checkstyle.14":{"startLine":"272","shortMessage":"'{' at column 4 should be on the previous line.","longMessage":"'{' at column 4 should be on the previous line."},"de.upb.gpa.Checkstyle.827":{"startLine":"312","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getCredits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getCredits' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getCredits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getCredits' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.825":{"startLine":"298","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getLastName' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getLastName' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.826":{"startLine":"305","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getLoginCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getLoginCount' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getLoginCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getLoginCount' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.108":{"startLine":"99","shortMessage":"Parameter webgoatContext should be final.","longMessage":"Parameter webgoatContext should be final."},"de.upb.gpa.Checkstyle.823":{"startLine":"280","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getCreditCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getCreditCard' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getCreditCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getCreditCard' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.109":{"startLine":"99","shortMessage":"'webgoatContext' hides a field.","longMessage":"'webgoatContext' hides a field."},"de.upb.gpa.Checkstyle.824":{"startLine":"291","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getFirstName' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getFirstName' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.700":{"startLine":"82","shortMessage":"Name 'loginCount' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.","longMessage":"Name 'loginCount' must match pattern '^[A-Z][A-Z0-9]**$'."},"de.upb.gpa.Checkstyle.821":{"startLine":"169","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'createContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'createContent' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'createContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'createContent' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.701":{"startLine":"84","shortMessage":"Name 'ccNumber' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.","longMessage":"Name 'ccNumber' must match pattern '^[A-Z][A-Z0-9]**$'."},"de.upb.gpa.Checkstyle.822":{"startLine":"260","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getResults' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getResults' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.820":{"startLine":"139","shortMessage":"Parameter parameterValue should be final.","longMessage":"Parameter parameterValue should be final."},"de.upb.gpa.Checkstyle.141":{"startLine":"270","shortMessage":"Expression can be simplified.","longMessage":"Expression can be simplified."},"de.upb.gpa.Checkstyle.818":{"startLine":"139","shortMessage":"Parameter proc should be final.","longMessage":"Parameter proc should be final."},"de.upb.gpa.Checkstyle.819":{"startLine":"139","shortMessage":"Parameter parameterName should be final.","longMessage":"Parameter parameterName should be final."},"de.upb.gpa.Checkstyle.816":{"startLine":"139","shortMessage":"Parameter serv should be final.","longMessage":"Parameter serv should be final."},"de.upb.gpa.Checkstyle.618":{"startLine":"308","shortMessage":"'{' at column 23 should have line break after.","longMessage":"'{' at column 23 should have line break after."},"de.upb.gpa.Checkstyle.817":{"startLine":"139","shortMessage":"Parameter port should be final.","longMessage":"Parameter port should be final."},"de.upb.gpa.Checkstyle.814":{"startLine":"134","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getTitle' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getTitle' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.815":{"startLine":"139","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'accessWGService' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'accessWGService' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'accessWGService' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'accessWGService' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.812":{"startLine":"115","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getHints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getHints' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getHints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getHints' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.813":{"startLine":"129","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getDefaultRanking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getDefaultRanking' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getDefaultRanking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getDefaultRanking' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.810":{"startLine":"104","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getWebgoatContext' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getWebgoatContext' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getWebgoatContext' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getWebgoatContext' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.811":{"startLine":"110","shortMessage":"Class 'WSDLScanning' looks like designed for extension (can be subclassed), but the method 'getDefaultCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getDefaultCategory' static\/final\/abstract\/empty, or adding allowed annotation for the method.","longMessage":"Class 'WSDLScanning' looks like designed for extension , but the method 'getDefaultCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WSDLScanning' final or making the method 'getDefaultCategory' static\/final\/abstract\/empty, or adding allowed annotation for the method."},"de.upb.gpa.Checkstyle.698":{"startLine":"78","shortMessage":"Name 'firstName' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.","longMessage":"Name 'firstName' must match pattern '^[A-Z][A-Z0-9]**$'."},"de.upb.gpa.Checkstyle.699":{"startLine":"80","shortMessage":"Name 'lastName' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.","longMessage":"Name 'lastName' must match pattern '^[A-Z][A-Z0-9]**$'."},"de.upb.gpa.Checkstyle.35":{"startLine":"169","shortMessage":"Parameter s should be final.","longMessage":"Parameter s should be final."},"de.upb.gpa.Checkstyle.36":{"startLine":"244","shortMessage":"'}' at column 4 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if\/else-if\/else, do\/while or try\/catch\/finally).","longMessage":"'}' at column 4 should be on the same line as the next part of a multi-block statement ."},"de.upb.gpa.Checkstyle.809":{"startLine":"76","shortMessage":"Variable 'beenRestartedYet' must be private and have accessor methods.","longMessage":"Variable 'beenRestartedYet' must be private and have accessor methods."},"de.upb.gpa.Checkstyle.808":{"startLine":"74","shortMessage":"Variable 'completed' must be private and have accessor methods.","longMessage":"Variable 'completed' must be private and have accessor methods."},"de.upb.gpa.findbugs.HE_INHERITS_EQUALS_USE_HASHCODE":{"startLine":"71","shortMessage":"Bad practice - Class inherits equals() and uses Object.hashCode()","longMessage":"This class inherits equals(Object) from an abstract superclass, and hashCode() fromjava.lang.Object (which returns the identity hash code, an arbitrary value assigned to the object by the VM).&nbsp; Therefore, the class is very likely to violate the invariant that equal objects must have equal hashcodes. If you don't want to define a hashCode method, and\/or don't believe the object will ever be put into a HashMap\/Hashtable, define the hashCode() method to throw UnsupportedOperationException."},"de.upb.gpa.Checkstyle.722":{"startLine":"260","shortMessage":"Parameter field should be final.","longMessage":"Parameter field should be final."},"de.upb.gpa.Checkstyle.723":{"startLine":"270","shortMessage":"'{' at column 56 should have line break after.","longMessage":"'{' at column 56 should have line break after."},"de.upb.gpa.Checkstyle.203":{"startLine":"1","shortMessage":"File does not end with a newline.","longMessage":"File does not end with a newline."},"de.upb.gpa.Checkstyle.721":{"startLine":"305","shortMessage":"Parameter id should be final.","longMessage":"Parameter id should be final."},"de.upb.gpa.Checkstyle.2":{"startLine":"270","shortMessage":"Line is longer than 80 characters (found 119).","longMessage":"Line is longer than 80 characters ."},"de.upb.gpa.findbugs.OBL_UNSATISFIED_OBLIGATION":{"startLine":"264","shortMessage":"Experimental - Method may fail to clean up stream or resource","longMessage":"This method may fail to clean up (close, dispose of) a stream, database object, or other resource requiring an explicit cleanup operation. In general, if a method opens a stream or other resource, the method should use a try\/finally block to ensure that the stream or resource is cleaned up before the method returns. This bug pattern is essentially the same as the OS_OPEN_STREAM and ODR_OPEN_DATABASE_RESOURCE bug patterns, but is based on a different (and hopefully better) static analysis technique. We are interested is getting feedback about the usefulness of this bug pattern. For sending feedback, check: contributing guideline malinglist In particular, the false-positive suppression heuristics for this bug pattern have not been extensively tuned, so reports about false positives are helpful to us. See Weimer and Necula, Finding and Preventing Run-Time Error Handling Mistakes, for a description of the analysis technique."},"de.upb.gpa.Checkstyle.3":{"startLine":"95","shortMessage":"Line has trailing spaces.","longMessage":"Line has trailing spaces."},"de.upb.gpa.Checkstyle.6":{"startLine":"74","shortMessage":"File contains tab characters (this is the first instance).","longMessage":"File contains tab characters ."},"de.upb.gpa.findbugs.ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD":{"startLine":"101","shortMessage":"Style - Write to static field from instance method","longMessage":"This instance method writes to a static field. This is tricky to getcorrect if multiple instances are being manipulated,and generally bad practice."},"de.upb.gpa.Checkstyle.5":{"startLine":"72","shortMessage":"'{' at column 1 should be on the previous line.","longMessage":"'{' at column 1 should be on the previous line."},"de.upb.gpa.Checkstyle.8":{"startLine":"127","shortMessage":"'static' modifier out of order with the JLS suggestions.","longMessage":"'static' modifier out of order with the JLS suggestions."},"de.upb.gpa.Checkstyle.7":{"startLine":"91","shortMessage":"First sentence should end with a period.","longMessage":"First sentence should end with a period."},"de.upb.gpa.Checkstyle.9":{"startLine":"312","shortMessage":"Missing a Javadoc comment.","longMessage":"Missing a Javadoc comment."},"de.upb.gpa.findbugs.REC_CATCH_EXCEPTION":{"startLine":"171","shortMessage":"Style - Exception is caught when Exception is not thrown","longMessage":"This method uses a try-catch block that catches Exception objects, but Exception is not thrown within the try block, and RuntimeException is not explicitly caught. It is a common bug pattern to say try { ... } catch (Exception e) { something } as a shorthand for catching a number of types of exception each of whose catch blocks is identical, but this construct also accidentally catches RuntimeException as well, masking potential bugs. A better approach is to either explicitly catch the specific exceptions that are thrown, or to explicitly catch RuntimeException exception, rethrow it, and then catch all non-Runtime Exceptions, as shown below:try { ...} catch (RuntimeException e) { throw e;} catch (Exception e) { ... deal with all non-runtime exceptions ...}"},"de.upb.gpa.findbugs.ODR_OPEN_DATABASE_RESOURCE":{"startLine":"264","shortMessage":"Bad practice - Method may fail to close database resource","longMessage":"The method creates a database resource (such as a database connectionor row set), does not assign it to anyfields, pass it to other methods, or return it, and does not appear to closethe object on all paths out of the method.&nbsp; Failure toclose database resources on all paths out of a method mayresult in poor performance, and could cause the application tohave problems communicating with the database."}}