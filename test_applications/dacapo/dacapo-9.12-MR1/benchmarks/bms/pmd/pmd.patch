diff -ur orig/pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractRenderer.java pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractRenderer.java
--- orig/pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractRenderer.java	2017-05-20 20:36:32.000000000 +1000
+++ pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractRenderer.java	2017-12-19 14:30:10.744710417 +1100
@@ -131,7 +131,7 @@
         } catch (IOException e) {
             throw new IllegalStateException(e);
         } finally {
-            IOUtils.closeQuietly(writer);
+//            IOUtils.closeQuietly(writer);
         }
     }
 }
diff -ur orig/pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/FileDataSource.java pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/FileDataSource.java
index a3691033f..142a10d6e 100644
--- orig/pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/FileDataSource.java
+++ pmd-src-5.8.1/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/FileDataSource.java
@@ -37,14 +37,19 @@ public class FileDataSource implements DataSource {
     }
 
     private String glomName(boolean shortNames, String inputFileName, File file) {
-        if (shortNames && inputFileName.indexOf(',') == -1) {
-            if (new File(inputFileName).isDirectory()) {
-                return trimAnyPathSep(file.getPath().substring(inputFileName.length()));
-            } else {
-                if (inputFileName.indexOf(FILE_SEPARATOR.charAt(0)) == -1) {
-                    return inputFileName;
+        if (shortNames) {
+            if (inputFileName != null && inputFileName.indexOf(',') == -1) {
+                if (new File(inputFileName).isDirectory()) {
+                    return trimAnyPathSep(file.getPath().substring(inputFileName.length()));
+                } else {
+                    if (inputFileName.indexOf(FILE_SEPARATOR.charAt(0)) == -1) {
+                        return inputFileName;
+                    }
+                    return trimAnyPathSep(inputFileName.substring(inputFileName.lastIndexOf(FILE_SEPARATOR)));
                 }
-                return trimAnyPathSep(inputFileName.substring(inputFileName.lastIndexOf(FILE_SEPARATOR)));
+            } else {
+                // if the 'master' file is not specified, just use the file name
+                return file.getName();
             }
         }
 
